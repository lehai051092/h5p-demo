version: '3.6'

services:
  mongo:
    image: mongo:4.4
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=h5pnodejs
    ports:
      - '27017:27017'
    volumes:
      - mongodb_data:/data/db
    networks:
      - h5p-net

  minio:
    image: minio/minio:latest
    volumes:
      - minio_data:/data
    ports:
      - '9000:9000'
    command: [ 'server', '/data' ]
    environment:
      - MINIO_ACCESS_KEY=minioaccesskey
      - MINIO_SECRET_KEY=miniosecret
    networks:
      - h5p-net

  redis:
    image: redis:6.2-alpine
    command: 'redis-server --appendonly yes'
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - h5p-net

  minio_init:
    image: minio/mc:latest
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add h5pminio http://minio:9000 minioaccesskey miniosecret --api S3v4;
      if ! /usr/bin/mc ls h5pminio/testbucket1 > /dev/null 2>&1; then /usr/bin/mc mb h5pminio/testbucket1; fi;
      if ! /usr/bin/mc ls h5pminio/tempbucket1 > /dev/null 2>&1; then /usr/bin/mc mb h5pminio/tempbucket1; fi;
      if ! /usr/bin/mc ls h5pminio/libbucket1 > /dev/null 2>&1; then /usr/bin/mc mb h5pminio/libbucket1; fi;
      exit 0;
      "
    networks:
      - h5p-net

  h5p:
    build:
      context: .
      dockerfile: Dockerfile
    image: h5p-lms:latest
    ports:
      - '8080:8080'
    depends_on:
      - mongo
      - minio
      - minio_init
      - redis
    environment:
      - CONTENTSTORAGE=mongos3
      - AWS_ACCESS_KEY_ID=minioaccesskey
      - AWS_SECRET_ACCESS_KEY=miniosecret
      - AWS_S3_ENDPOINT=http://minio:9000
      - AWS_S3_MAX_FILE_LENGTH=100
      - CONTENT_AWS_S3_BUCKET=testbucket1
      - TEMPORARYSTORAGE=s3
      - TEMPORARY_AWS_S3_BUCKET=tempbucket1
      - MONGODB_URL=mongodb://mongo:27017
      - MONGODB_DB=testdb1
      - MONGODB_USER=root
      - MONGODB_PASSWORD=h5pnodejs
      - CONTENT_MONGO_COLLECTION=h5p
      - CACHE=redis
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - LOCK=redis
      - LOCK_REDIS_HOST=redis
      - LOCK_REDIS_PORT=6379
      - LOCK_REDIS_DB=1
      - LIBRARYSTORAGE=mongos3
      - LIBRARY_MONGO_COLLECTION=h5plibraries
      - LIBRARY_AWS_S3_BUCKET=libbucket1
    volumes:
      - h5p_data:/home/node/h5p-nodejs-library/h5p
    networks:
      - h5p-net

  loadbalancer:
    image: nginx:1.21
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - h5p
    ports:
      - '8081:8080'
    networks:
      - h5p-net
networks:
  h5p-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.231.1.0/24
          gateway: 172.231.1.1
volumes:
  mongodb_data:
  minio_data:
  redis_data:
  h5p_data:
